/*
 * This build file was auto generated by running the Gradle 'init' task
 * by '' at '12/16/16 11:27 AM' with Gradle 3.2.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2.1/userguide/tutorial_java_projects.html
 */
plugins {
    id "io.spring.dependency-management" version "1.0.0.RC1"
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    //versions
    ext['stone.version'] = '2.0'
    ext['slf4j.version'] = '1.7.21'
    ext['oro.version'] = '2.0.8'
    ext['logback.version'] = '1.2.3'
    ext['aspectj.version'] = '1.8.4'
    ext['spring.version'] = '4.3.13.RELEASE'
    ext['spring.boot.version'] = '1.5.9.RELEASE'
    ext['common.lang.version'] = '2.6'
    ext['asm.version'] = '4.2'
    ext['common.collection.version'] = '3.2.2'
    ext['common.logging.version'] = '1.2'
    ext['common.beanutils.version'] = '1.9.2'
    ext['spring.session.version'] = '1.0.2.RELEASE'
    ext['jackson.annotations.version'] = '2.8.4'
    ext['jackson.core.version'] = '2.8.4'
    ext['jackson.databind.version'] = '2.8.4'
    ext['swagger.version'] = '1.3.12'
    ext['classmate.version'] = '1.3.1'
    ext['jboss.logging.version'] = '3.3.0.Final'
    ext['glassfish.javax.inject.version'] = '2.4.0-b34'
    ext['jersey.version'] = '2.25.1'
    ext['javasssist.version'] = '3.18.2-GA'
    ext['javax.ws.rs.api.version'] = '2.0.1'
    ext['fastjson.version'] = '1.2.8'
    ext['ehcache.version'] = '2.9.0'
    ext['guava.version'] = '20.0'
    ext['javax.persistence.version'] = '1.0'
    ext['mysql.connector.java.version'] = '5.1.23'
    ext['commons.dbcp2.version'] = '2.1.1'
    ext['kafka.version'] = '1.1.0.RELEASE'
    ext['jersey.test.version'] = '2.25.1'
    ext['mongo.java.driver.version'] = '3.4.2'
    ext['caffeine.version'] = '2.5.2'
    ext['rxjava2.version'] = '2.1.3'
    ext['snakeyaml.version'] = '1.19'

    group = 'strone'
    version = ext['stone.version']
    sourceCompatibility = '1.8'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/'  }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    dependencyManagement {
        dependencies {
            dependency 'org.slf4j:slf4j-api:' + ext['slf4j.version']
            dependency 'org.javassist:javassist:' + ext['javasssist.version']
            dependency 'oro:oro:' + ext['oro.version']
            dependency 'ch.qos.logback:logback-core:' + ext['logback.version']
            dependency 'ch.qos.logback:logback-classic:' + ext['logback.version']
            dependency 'org.springframework:spring-context:' + ext['spring.version']
            dependency 'org.springframework:spring-beans:' + ext['spring.version']
            dependency 'org.springframework:spring-jdbc:' + ext['spring.version']
            dependency 'org.springframework:spring-tx:' + ext['spring.version']
            dependency 'org.springframework:spring-test:' + ext['spring.version']
            dependency 'org.aspectj:aspectjweaver:' + ext['aspectj.version']
            dependency 'net.sf.ehcache:ehcache:' + ext['ehcache.version']
            dependency 'org.springframework:spring-core:' + ext['spring.version']
            dependency 'org.springframework:spring-expression:' + ext['spring.version']
            dependency 'org.springframework:spring-aop:' + ext['spring.version']
            dependency 'org.springframework:spring-instrument:' + ext['spring.version']
            dependency 'org.springframework:spring-websocket:' + ext['spring.version']
            dependency 'org.springframework:spring-webmvc:' + ext['spring.version']
            dependency 'org.springframework.session:spring-session:' + ext['spring.session.version']
            dependency 'org.springframework:spring-messaging:' + ext['spring.version']
            dependency 'org.springframework:spring-oxm:' + ext['spring.version']
            dependency 'org.springframework:spring-web:' + ext['spring.version']
            dependency 'org.springframework.boot:spring-boot-starter-tomcat:' + ext['spring.boot.version']
            dependency 'org.springframework.boot:spring-boot-starter-jersey:' + ext['spring.boot.version']
            dependency 'org.springframework.boot:spring-boot-configuration-processor:' + ext['spring.boot.version']
            dependency 'org.springframework.boot:spring-boot-starter-logging:' + ext['spring.boot.version']
            dependency 'org.springframework.boot:spring-boot-autoconfigure:' + ext['spring.boot.version']
            dependency 'org.springframework.boot:spring-boot-starter-validation:' + ext['spring.boot.version']
            dependency 'org.springframework.boot:spring-boot-starter:' + ext['spring.boot.version']
            dependency 'org.springframework.boot:spring-boot-starter-web:' + ext['spring.boot.version']
            dependency 'org.springframework.boot:spring-boot-starter-actuator:' + ext['spring.boot.version']
            dependency 'org.springframework.boot:spring-boot-starter-security:' + ext['spring.boot.version']
            dependency 'org.springframework.boot:spring-boot-starter-test:' + ext['spring.boot.version']
            dependency 'org.springframework.boot:spring-boot-starter-cache:' + ext['spring.boot.version']
            dependency 'commons-lang:commons-lang:' + ext['common.lang.version']
            dependency 'org.jboss.logging:jboss-logging:' + ext['jboss.logging.version']
            dependency 'com.fasterxml:classmate:' + ext['classmate.version']
            dependency 'org.ow2.asm:asm:' + ext['asm.version']
            dependency 'org.glassfish.hk2.external:javax.inject:' + ext['glassfish.javax.inject.version']
            dependency 'org.glassfish.jersey.core:jersey-common:' + ext['jersey.version']
            dependency 'org.glassfish.jersey.core:jersey-client:' + ext['jersey.version']
            dependency 'org.glassfish.jersey.core:jersey-server:' + ext['jersey.version']
            dependency 'org.glassfish.jersey.core:jersey-container-servlet-core:' + ext['jersey.version']
            dependency 'org.glassfish.jersey.containers:jersey-grizzly2-http:' + ext['jersey.version']
            dependency 'org.glassfish.jersey.containers:jersey-grizzly2-servlet:' + ext['jersey.version']
            dependency 'org.glassfish.jersey.containers:jersey-container-servlet:' + ext['jersey.version']
            dependency 'org.glassfish.jersey.containers:jersey-container-servlet-core:' + ext['jersey.version']
            dependency 'org.glassfish.jersey.ext:jersey-bean-validation:' + ext['jersey.version']
            dependency 'org.glassfish.jersey.ext:jersey-entity-filtering:' + ext['jersey.version']
            dependency 'org.glassfish.jersey.ext:jersey-spring:' + ext['jersey.version']
            dependency 'org.glassfish.jersey.media:jersey-media-jaxb:' + ext['jersey.version']
            dependency 'org.glassfish.jersey.media:jersey-media-json-jackson:' + ext['jersey.version']
            dependency 'commons-collections:commons-collections:' + ext['common.collection.version']
            dependency 'commons-logging:commons-logging:' + ext['common.logging.version']
            dependency 'commons-beanutils:commons-beanutils:' + ext['common.beanutils.version']
            dependency 'org.springframework.boot:spring-boot-starter-jetty:' + ext['spring.boot.version']
            dependency 'com.fasterxml.jackson.core:jackson-annotations:' + ext['jackson.annotations.version']
            dependency 'com.fasterxml.jackson.core:jackson-core:' + ext['jackson.core.version']
            dependency 'com.fasterxml.jackson.core:jackson-databind:' + ext['jackson.databind.version']
            dependency 'com.wordnik:swagger-annotations:' + ext['swagger.version']
            dependency 'javax.ws.rs:javax.ws.rs-api:' + ext['javax.ws.rs.api.version']
            dependency('com.wordnik:swagger-jersey2-jaxrs_2.10:' + ext['swagger.version']) {
                exclude 'javax.ws.rs:jsr311-api'
            }
            dependency 'com.google.guava:guava:' + ext['guava.version']
            dependency 'com.alibaba:fastjson:' + ext['fastjson.version']
            dependency 'javax.persistence:persistence-api:' + ext['javax.persistence.version']
            dependency 'mysql:mysql-connector-java:' + ext['mysql.connector.java.version']
            dependency 'org.apache.commons:commons-dbcp2:' + ext['commons.dbcp2.version']
            dependency 'org.springframework.kafka:spring-kafka:' + ext['kafka.version']
            dependency 'org.springframework.kafka:spring-kafka-test:' + ext['kafka.version']
            dependency 'org.glassfish.jersey.test-framework:jersey-test-framework-core:'+ ext['jersey.test.version']
            dependency 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:'+ ext['jersey.test.version']
            dependency 'org.glassfish.jersey.core:jersey-common:'+ ext['jersey.test.version']
            dependency 'org.jolokia:jolokia-core:1.3.6'
            dependency 'org.mongodb:mongo-java-driver:' + ext['mongo.java.driver.version']
            dependency 'com.github.ben-manes.caffeine:caffeine:' + ext['caffeine.version']
            dependency 'io.reactivex.rxjava2:rxjava:' + ext['rxjava2.version']
            dependency 'org.yaml:snakeyaml:' + ext['snakeyaml.version']
        }
    }

    uploadArchives {
        repositories {
            mavenLocal()
        }
    }
}
